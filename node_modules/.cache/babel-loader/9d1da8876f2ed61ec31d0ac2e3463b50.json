{"ast":null,"code":"import { actions } from './actions';\nimport { fetchProjects as _fetchProjects } from '../../services/ProjectsService';\nimport { actionCreator as agents } from '../agents/action-creators';\nvar projectsKey = 'projects';\nexport var actionCreator = {\n  fetchProjects: function fetchProjects(token, email) {\n    return function (dispatch) {\n      return _fetchProjects(token, email).then(function (response) {\n        if (response.projectList) {\n          dispatch(actions.fetchProjects(response));\n          localStorage.setItem(projectsKey, JSON.stringify(response.projectList));\n\n          // Fetch all agents for project\n          var projectId = response.projectList[0].projectID;\n          dispatch(agents.fetchAgents(token, projectId));\n          return response;\n        } else {\n          throw new Error('no projectList key found in response');\n        }\n      }).catch(function (err) {\n        return false;\n      });\n    };\n  }\n};","map":{"version":3,"names":["actions","fetchProjects","actionCreator","agents","projectsKey","token","email","dispatch","then","response","projectList","localStorage","setItem","JSON","stringify","projectId","projectID","fetchAgents","Error","catch","err"],"sources":["/Users/drenyasova/diplome/src/redux/projects/action-creators.js"],"sourcesContent":["import {actions} from './actions'\nimport {fetchProjects} from '../../services/ProjectsService'\nimport {actionCreator as agents} from '../agents/action-creators'\n\nconst projectsKey = 'projects'\n\nexport const actionCreator = {\n  fetchProjects: (token, email) => (dispatch) => {\n    return fetchProjects(token, email)\n      .then((response) => {\n        if (response.projectList) {\n          dispatch(actions.fetchProjects(response))\n          localStorage.setItem(\n            projectsKey,\n            JSON.stringify(response.projectList),\n          )\n\n          // Fetch all agents for project\n          const projectId = response.projectList[0].projectID\n          dispatch(agents.fetchAgents(token, projectId))\n          return response\n        } else {\n          throw new Error('no projectList key found in response')\n        }\n      })\n      .catch((err) => false)\n  },\n}\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,WAAW;AACjC,SAAQC,aAAa,IAAbA,cAAa,QAAO,gCAAgC;AAC5D,SAAQC,aAAa,IAAIC,MAAM,QAAO,2BAA2B;AAEjE,IAAMC,WAAW,GAAG,UAAU;AAE9B,OAAO,IAAMF,aAAa,GAAG;EAC3BD,aAAa,EAAE,SAAAA,cAACI,KAAK,EAAEC,KAAK;IAAA,OAAK,UAACC,QAAQ,EAAK;MAC7C,OAAON,cAAa,CAACI,KAAK,EAAEC,KAAK,CAAC,CAC/BE,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClB,IAAIA,QAAQ,CAACC,WAAW,EAAE;UACxBH,QAAQ,CAACP,OAAO,CAACC,aAAa,CAACQ,QAAQ,CAAC,CAAC;UACzCE,YAAY,CAACC,OAAO,CAClBR,WAAW,EACXS,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACC,WAAW,CACrC,CAAC;;UAED;UACA,IAAMK,SAAS,GAAGN,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACM,SAAS;UACnDT,QAAQ,CAACJ,MAAM,CAACc,WAAW,CAACZ,KAAK,EAAEU,SAAS,CAAC,CAAC;UAC9C,OAAON,QAAQ;QACjB,CAAC,MAAM;UACL,MAAM,IAAIS,KAAK,CAAC,sCAAsC,CAAC;QACzD;MACF,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,GAAG;QAAA,OAAK,KAAK;MAAA,EAAC;IAC1B,CAAC;EAAA;AACH,CAAC"},"metadata":{},"sourceType":"module"}