{"ast":null,"code":"import { apiCall } from \"./ApiService\";\nimport { config } from \"./config\";\nvar loginRoute = \"\".concat(config.URL, \":\").concat(config.PORT_NUMBER, \"/\").concat(config.API.LOGIN);\nvar registerRoute = \"\".concat(config.URL, \":\").concat(config.PORT_NUMBER, \"/V1/Admin/\").concat(config.API.REGISTER);\nexport var loginUser = function loginUser(email, password) {\n  return apiCall(config.REQ_TYPES.POST, loginRoute, config.CONTENT_TYPES.APPLICATION_JSON, {\n    email: email,\n    password: password\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response.error) {\n      throw new Error(response.error);\n    }\n    return response;\n  });\n};\nexport var registerUser = function registerUser(firstName, surname, email, password) {\n  return apiCall(config.REQ_TYPES.POST, registerRoute, config.CONTENT_TYPES.APPLICATION_JSON, {\n    email: email,\n    name: firstName,\n    surname: surname,\n    password: password,\n    role: \"DEVELOPER\"\n  }).then(function (r) {\n    if (r.status === 400) throw new Error(\"Username already exists.\");\n    if (r.error) throw new Error(\"There has been an error. Please try again or later.\");\n    return r;\n  }).catch(function (e) {\n    throw new Error(e);\n  });\n};","map":{"version":3,"names":["apiCall","config","loginRoute","concat","URL","PORT_NUMBER","API","LOGIN","registerRoute","REGISTER","loginUser","email","password","REQ_TYPES","POST","CONTENT_TYPES","APPLICATION_JSON","then","response","json","error","Error","registerUser","firstName","surname","name","role","r","status","catch","e"],"sources":["/Users/drenyasova/diplome/src/services/AuthService.js"],"sourcesContent":["import { apiCall } from \"./ApiService\";\n\nimport { config } from \"./config\";\n\nconst loginRoute = `${config.URL}:${config.PORT_NUMBER}/${config.API.LOGIN}`;\nconst registerRoute = `${config.URL}:${config.PORT_NUMBER}/V1/Admin/${config.API.REGISTER}`;\n\nexport const loginUser = (email, password) => {\n  return apiCall(\n    config.REQ_TYPES.POST,\n    loginRoute,\n    config.CONTENT_TYPES.APPLICATION_JSON,\n    {\n      email,\n      password,\n    }\n  )\n    .then((response) =>response.json())\n    .then((response) => {\n      if (response.error) {\n        throw new Error(response.error);\n      }\n      return response;\n    });\n};\n\nexport const registerUser = (firstName, surname, email, password) => {\n  return (\n    apiCall(\n      config.REQ_TYPES.POST,\n      registerRoute,\n      config.CONTENT_TYPES.APPLICATION_JSON,\n      { email, name: firstName, surname, password, role: \"DEVELOPER\" }\n    )\n      .then((r) => {\n        if (r.status === 400) throw new Error(\"Username already exists.\");\n        if (r.error)\n          throw new Error(\n            \"There has been an error. Please try again or later.\"\n          );\n        return r;\n      })\n      .catch((e) => {\n        throw new Error(e);\n      })\n  );\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AAEtC,SAASC,MAAM,QAAQ,UAAU;AAEjC,IAAMC,UAAU,MAAAC,MAAA,CAAMF,MAAM,CAACG,GAAG,OAAAD,MAAA,CAAIF,MAAM,CAACI,WAAW,OAAAF,MAAA,CAAIF,MAAM,CAACK,GAAG,CAACC,KAAK,CAAE;AAC5E,IAAMC,aAAa,MAAAL,MAAA,CAAMF,MAAM,CAACG,GAAG,OAAAD,MAAA,CAAIF,MAAM,CAACI,WAAW,gBAAAF,MAAA,CAAaF,MAAM,CAACK,GAAG,CAACG,QAAQ,CAAE;AAE3F,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAEC,QAAQ,EAAK;EAC5C,OAAOZ,OAAO,CACZC,MAAM,CAACY,SAAS,CAACC,IAAI,EACrBZ,UAAU,EACVD,MAAM,CAACc,aAAa,CAACC,gBAAgB,EACrC;IACEL,KAAK,EAALA,KAAK;IACLC,QAAQ,EAARA;EACF,CACF,CAAC,CACEK,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC,CAClCF,IAAI,CAAC,UAACC,QAAQ,EAAK;IAClB,IAAIA,QAAQ,CAACE,KAAK,EAAE;MAClB,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACE,KAAK,CAAC;IACjC;IACA,OAAOF,QAAQ;EACjB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,SAAS,EAAEC,OAAO,EAAEb,KAAK,EAAEC,QAAQ,EAAK;EACnE,OACEZ,OAAO,CACLC,MAAM,CAACY,SAAS,CAACC,IAAI,EACrBN,aAAa,EACbP,MAAM,CAACc,aAAa,CAACC,gBAAgB,EACrC;IAAEL,KAAK,EAALA,KAAK;IAAEc,IAAI,EAAEF,SAAS;IAAEC,OAAO,EAAPA,OAAO;IAAEZ,QAAQ,EAARA,QAAQ;IAAEc,IAAI,EAAE;EAAY,CACjE,CAAC,CACET,IAAI,CAAC,UAACU,CAAC,EAAK;IACX,IAAIA,CAAC,CAACC,MAAM,KAAK,GAAG,EAAE,MAAM,IAAIP,KAAK,CAAC,0BAA0B,CAAC;IACjE,IAAIM,CAAC,CAACP,KAAK,EACT,MAAM,IAAIC,KAAK,CACb,qDACF,CAAC;IACH,OAAOM,CAAC;EACV,CAAC,CAAC,CACDE,KAAK,CAAC,UAACC,CAAC,EAAK;IACZ,MAAM,IAAIT,KAAK,CAACS,CAAC,CAAC;EACpB,CAAC,CAAC;AAER,CAAC"},"metadata":{},"sourceType":"module"}