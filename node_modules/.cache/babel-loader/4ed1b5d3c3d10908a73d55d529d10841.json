{"ast":null,"code":"import * as Cards from \"./Cards\";\nimport * as DefaultCards from \"./DefaultCards\";\nexport var GQMCardsToQuestions = function GQMCardsToQuestions(GQMQuestionMetrics) {\n  console.log(\"result: \", GQMQuestionMetrics);\n  var getName = function getName(i) {\n    if (GQMQuestionMetrics[i] && GQMQuestionMetrics[i].content) return GQMQuestionMetrics[i].content;else return;\n  };\n  var tempConfig = [{\n    name: getName(0) ? GQMQuestionMetrics[0].content : \"What is the Overall Time Spent?\",\n    metrics: GQMQuestionMetrics.length > 0 && GQMQuestionMetrics[0].metrics.length > 0 ? getMetrics(GQMQuestionMetrics[0].metrics) : getMetrics(DefaultCards.DefaultCardsForQ1)\n  }, {\n    name: getName(1) ? GQMQuestionMetrics[1].content : \"What Type of Apps do Users Mostly Use?\",\n    metrics: GQMQuestionMetrics.length > 1 && GQMQuestionMetrics[1].metrics.length > 0 ? getMetrics(GQMQuestionMetrics[1].metrics) : getMetrics(DefaultCards.DefaultCardsForQ2)\n  }, {\n    name: getName(2) ? GQMQuestionMetrics[2].content : \"What is the Overall Code Quality?\",\n    metrics: GQMQuestionMetrics.length > 2 && GQMQuestionMetrics[2].metrics.length > 0 ? getMetrics(GQMQuestionMetrics[2].metrics) : getMetrics(DefaultCards.DefaultCardsForQ3)\n  }];\n  return tempConfig;\n};\nvar getMetrics = function getMetrics(metrics) {\n  var metricsPerQuestion = metrics.map(function (metric) {\n    return CardsDistribution(metric.name);\n  });\n  return metricsPerQuestion;\n};\n\n//list of names can be created, then use it everywhere\nvar CardsDistribution = function CardsDistribution(name) {\n  switch (name) {\n    case \"Accumulated Total Time Spent\":\n      return Cards.TimeSpent;\n    case \"Accumulated Activities\":\n      return Cards.Activities;\n    case \"Top 5 Apps per Day\":\n      return Cards.TopAps;\n    case \"Category Chart\":\n      return Cards.Category;\n    case \"SQ Number of Classes\":\n      return Cards.SQClasses;\n    case \"SQ Lines of Code\":\n      return Cards.SQLoc;\n    case \"SQ Coverage\":\n      //'SQ Coverage':\n      return Cards.SQCoverage;\n    default:\n      return null;\n    // add if there is a new widget\n  }\n};","map":{"version":3,"names":["Cards","DefaultCards","GQMCardsToQuestions","GQMQuestionMetrics","console","log","getName","i","content","tempConfig","name","metrics","length","getMetrics","DefaultCardsForQ1","DefaultCardsForQ2","DefaultCardsForQ3","metricsPerQuestion","map","metric","CardsDistribution","TimeSpent","Activities","TopAps","Category","SQClasses","SQLoc","SQCoverage"],"sources":["/Users/drenyasova/diplome/src/views/NewDashboard/GQMCardsConfig/index.js"],"sourcesContent":["import * as Cards from \"./Cards\";\nimport * as DefaultCards from \"./DefaultCards\";\n\nexport const GQMCardsToQuestions = (GQMQuestionMetrics) => {\n  console.log(\"result: \", GQMQuestionMetrics);\n  const getName = (i) => {\n    if (GQMQuestionMetrics[i] && GQMQuestionMetrics[i].content)\n      return GQMQuestionMetrics[i].content;\n    else return;\n  };\n\n  const tempConfig = [\n    {\n      name: getName(0)\n        ? GQMQuestionMetrics[0].content\n        : \"What is the Overall Time Spent?\",\n      metrics:\n        GQMQuestionMetrics.length > 0 &&\n        GQMQuestionMetrics[0].metrics.length > 0\n          ? getMetrics(GQMQuestionMetrics[0].metrics)\n          : getMetrics(DefaultCards.DefaultCardsForQ1),\n    },\n\n    {\n      name: getName(1)\n        ? GQMQuestionMetrics[1].content\n        : \"What Type of Apps do Users Mostly Use?\",\n      metrics:\n        GQMQuestionMetrics.length > 1 &&\n        GQMQuestionMetrics[1].metrics.length > 0\n          ? getMetrics(GQMQuestionMetrics[1].metrics)\n          : getMetrics(DefaultCards.DefaultCardsForQ2),\n    },\n\n    {\n      name: getName(2)\n        ? GQMQuestionMetrics[2].content\n        : \"What is the Overall Code Quality?\",\n      metrics:\n        GQMQuestionMetrics.length > 2 &&\n        GQMQuestionMetrics[2].metrics.length > 0\n          ? getMetrics(GQMQuestionMetrics[2].metrics)\n          : getMetrics(DefaultCards.DefaultCardsForQ3),\n    },\n  ];\n\n  return tempConfig;\n};\n\nconst getMetrics = (metrics) => {\n  const metricsPerQuestion = metrics.map((metric) => {\n    return CardsDistribution(metric.name);\n  });\n  return metricsPerQuestion;\n};\n\n//list of names can be created, then use it everywhere\nconst CardsDistribution = (name) => {\n  switch (name) {\n    case \"Accumulated Total Time Spent\":\n      return Cards.TimeSpent;\n    case \"Accumulated Activities\":\n      return Cards.Activities;\n    case \"Top 5 Apps per Day\":\n      return Cards.TopAps;\n    case \"Category Chart\":\n      return Cards.Category;\n    case \"SQ Number of Classes\":\n      return Cards.SQClasses;\n    case \"SQ Lines of Code\":\n      return Cards.SQLoc;\n    case \"SQ Coverage\": //'SQ Coverage':\n      return Cards.SQCoverage;\n    default:\n      return null;\n    // add if there is a new widget\n  }\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,SAAS;AAChC,OAAO,KAAKC,YAAY,MAAM,gBAAgB;AAE9C,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,kBAAkB,EAAK;EACzDC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,kBAAkB,CAAC;EAC3C,IAAMG,OAAO,GAAG,SAAVA,OAAOA,CAAIC,CAAC,EAAK;IACrB,IAAIJ,kBAAkB,CAACI,CAAC,CAAC,IAAIJ,kBAAkB,CAACI,CAAC,CAAC,CAACC,OAAO,EACxD,OAAOL,kBAAkB,CAACI,CAAC,CAAC,CAACC,OAAO,CAAC,KAClC;EACP,CAAC;EAED,IAAMC,UAAU,GAAG,CACjB;IACEC,IAAI,EAAEJ,OAAO,CAAC,CAAC,CAAC,GACZH,kBAAkB,CAAC,CAAC,CAAC,CAACK,OAAO,GAC7B,iCAAiC;IACrCG,OAAO,EACLR,kBAAkB,CAACS,MAAM,GAAG,CAAC,IAC7BT,kBAAkB,CAAC,CAAC,CAAC,CAACQ,OAAO,CAACC,MAAM,GAAG,CAAC,GACpCC,UAAU,CAACV,kBAAkB,CAAC,CAAC,CAAC,CAACQ,OAAO,CAAC,GACzCE,UAAU,CAACZ,YAAY,CAACa,iBAAiB;EACjD,CAAC,EAED;IACEJ,IAAI,EAAEJ,OAAO,CAAC,CAAC,CAAC,GACZH,kBAAkB,CAAC,CAAC,CAAC,CAACK,OAAO,GAC7B,wCAAwC;IAC5CG,OAAO,EACLR,kBAAkB,CAACS,MAAM,GAAG,CAAC,IAC7BT,kBAAkB,CAAC,CAAC,CAAC,CAACQ,OAAO,CAACC,MAAM,GAAG,CAAC,GACpCC,UAAU,CAACV,kBAAkB,CAAC,CAAC,CAAC,CAACQ,OAAO,CAAC,GACzCE,UAAU,CAACZ,YAAY,CAACc,iBAAiB;EACjD,CAAC,EAED;IACEL,IAAI,EAAEJ,OAAO,CAAC,CAAC,CAAC,GACZH,kBAAkB,CAAC,CAAC,CAAC,CAACK,OAAO,GAC7B,mCAAmC;IACvCG,OAAO,EACLR,kBAAkB,CAACS,MAAM,GAAG,CAAC,IAC7BT,kBAAkB,CAAC,CAAC,CAAC,CAACQ,OAAO,CAACC,MAAM,GAAG,CAAC,GACpCC,UAAU,CAACV,kBAAkB,CAAC,CAAC,CAAC,CAACQ,OAAO,CAAC,GACzCE,UAAU,CAACZ,YAAY,CAACe,iBAAiB;EACjD,CAAC,CACF;EAED,OAAOP,UAAU;AACnB,CAAC;AAED,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAIF,OAAO,EAAK;EAC9B,IAAMM,kBAAkB,GAAGN,OAAO,CAACO,GAAG,CAAC,UAACC,MAAM,EAAK;IACjD,OAAOC,iBAAiB,CAACD,MAAM,CAACT,IAAI,CAAC;EACvC,CAAC,CAAC;EACF,OAAOO,kBAAkB;AAC3B,CAAC;;AAED;AACA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIV,IAAI,EAAK;EAClC,QAAQA,IAAI;IACV,KAAK,8BAA8B;MACjC,OAAOV,KAAK,CAACqB,SAAS;IACxB,KAAK,wBAAwB;MAC3B,OAAOrB,KAAK,CAACsB,UAAU;IACzB,KAAK,oBAAoB;MACvB,OAAOtB,KAAK,CAACuB,MAAM;IACrB,KAAK,gBAAgB;MACnB,OAAOvB,KAAK,CAACwB,QAAQ;IACvB,KAAK,sBAAsB;MACzB,OAAOxB,KAAK,CAACyB,SAAS;IACxB,KAAK,kBAAkB;MACrB,OAAOzB,KAAK,CAAC0B,KAAK;IACpB,KAAK,aAAa;MAAE;MAClB,OAAO1B,KAAK,CAAC2B,UAAU;IACzB;MACE,OAAO,IAAI;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}