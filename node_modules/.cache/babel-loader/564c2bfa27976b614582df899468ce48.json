{"ast":null,"code":"import _slicedToArray from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport var LinePreprocesserTime = function LinePreprocesserTime(data, initStartDate, initEndDate) {\n  if (!data || !data.report || data.report.length === 0) return null;\n  var allEmails = [];\n  data.report.forEach(function (dataObj) {\n    if (!allEmails.find(function (e) {\n      return e === dataObj.email;\n    })) allEmails.push(dataObj.email);\n  });\n  var dataByEmail = [];\n  allEmails.forEach(function (em) {\n    dataByEmail.push({\n      name: em,\n      data: data.report.filter(function (d) {\n        return d.email === em;\n      })\n    });\n  });\n  var days = (getDateWithoutTime(initEndDate).getTime() - getDateWithoutTime(initStartDate).getTime()) / (1000 * 3600 * 24);\n  var allMembersTime = Array(days).fill(0);\n  var allDates = [];\n  dataByEmail = dataByEmail.map(function (EmailData) {\n    var startDate = new Date(initStartDate).getTime();\n    var date = new Date(initEndDate);\n    var DataForAllDates = [];\n    var k = EmailData.data.length - 1;\n    var daysIndex = days - 1;\n    while (startDate !== date.getTime()) {\n      if (allDates.length !== days) allDates.push(date.getTime());\n      date.setDate(date.getDate() - 1);\n      if (k !== -1 && getDateWithoutTime(EmailData.data[k].activity_day.split(\"/\").reverse().join(\"-\")).getTime() === getDateWithoutTime(date).getTime()) {\n        var time = TimeToSeconds(EmailData.data[k].time_used);\n        DataForAllDates.push(time);\n        allMembersTime[daysIndex] += time;\n        k--;\n      } else DataForAllDates.push(0);\n      daysIndex--;\n    }\n    return {\n      name: EmailData.name,\n      data: DataForAllDates.reverse()\n    };\n  });\n  dataByEmail.unshift({\n    name: \"Accumulated data\",\n    data: allMembersTime\n  });\n  return {\n    series: dataByEmail,\n    dates: allDates.reverse()\n  };\n};\n\n//helper functions for line App\n\nexport function formatTime(seconds) {\n  return [pad(Math.floor(seconds / 3600)), pad(Math.floor(seconds / 60) % 60), pad(seconds % 60)].join(\":\");\n}\nexport function timestrToSec(timestr) {\n  var parts = timestr.split(\":\");\n  if (parts[0].includes(\"days\")) return 0;\n  if (isNaN(parts[0]) || isNaN(parts[1]) || isNaN(parts[2])) return 0;\n  return +parts[0] * 3600 + +parts[1] * 60 + +parts[2];\n}\nexport function pad(num) {\n  if (num < 10) {\n    return \"0\" + num;\n  } else {\n    return \"\" + num;\n  }\n}\nvar sortObjectByKey = function sortObjectByKey(obj) {\n  var keys = [];\n  var sorted_obj = {};\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keys.push(key);\n    }\n  }\n\n  // sort keys\n  keys.sort();\n\n  // create new array based on Sorted Keys\n  keys.forEach(function (key) {\n    sorted_obj[key] = obj[key];\n  });\n  return sorted_obj;\n};\nvar getDateWithoutTime = function getDateWithoutTime(dateString) {\n  var date = new Date(dateString);\n  var year = date.getFullYear();\n  var month = date.getMonth();\n  var day = date.getDate();\n  var newDate = new Date(year, month, day);\n  return newDate;\n};\nvar TimeToSeconds = function TimeToSeconds(time) {\n  var t = time.split(\":\");\n  return t[0] * 3600 + t[1] * 60 + t[2] * 1;\n};\n\n//main functions for line App\nexport var LinePreprocesserApps = function LinePreprocesserApps(data) {\n  if (!data || !data.activityReports || data.activityReports.length === 0) return null;\n  return cumulteHourly(data.activityReports);\n};\nvar cumulteHourly = function cumulteHourly(reportList) {\n  var hours = {};\n  var apps = [];\n  reportList.forEach(function (r) {\n    var hourCaptured = r.capturedDate.split(\" \")[1].split(\":\")[0];\n    var hourStringified = String(Number(hourCaptured));\n    if (!apps.includes(r.executable_name)) apps.push(r.executable_name);\n    if (!hours[hourStringified]) hours[hourStringified] = {};\n    if (hours[hourStringified][r.executable_name]) {\n      hours[hourStringified][r.executable_name] = formatTime(timestrToSec(hours[hourStringified][r.executable_name]) + timestrToSec(r.used_time));\n    } else {\n      hours[hourStringified][r.executable_name] = r.used_time;\n    }\n  });\n  // Accumulate with previous values\n  var sortedHours = sortObjectByKey(hours);\n  var i = -1;\n  var prevKey = -1;\n  var res = [];\n  for (var _i = 0, _Object$entries = Object.entries(sortedHours); _i < _Object$entries.length; _i++) {\n    var _ref = _Object$entries[_i];\n    var _ref2 = _slicedToArray(_ref, 2);\n    var key = _ref2[0];\n    var value = _ref2[1];\n    i++;\n    if (i === 0) {\n      res.push({\n        hour: parseInt(key),\n        data: value\n      });\n      prevKey = key;\n      continue;\n    }\n    if (parseInt(prevKey) === parseInt(key) - 1) {\n      res.push({\n        hour: parseInt(key),\n        data: value\n      });\n      prevKey = key;\n      continue;\n    }\n    while (parseInt(prevKey) !== parseInt(key) - 1) {\n      res.push({\n        hour: parseInt(prevKey) + 1,\n        value: undefined\n      });\n      prevKey = parseInt(prevKey) + 1 + \"\";\n    }\n    res.push({\n      hour: parseInt(key),\n      data: value\n    });\n    prevKey = key;\n  }\n  var accumulated = {};\n  apps.forEach(function (a) {\n    accumulated[a] = [];\n  });\n  var pureHours = res.map(function (a) {\n    return a.hour;\n  });\n  var series = apps.map(function (a) {\n    return {\n      name: a,\n      data: []\n    };\n  });\n  series = series.map(function (item) {\n    var t = res.map(function (a) {\n      return a.data ? a.data[item.name] ? TimeToSeconds(a.data[item.name]) : 0 : 0;\n    });\n    return {\n      name: item.name,\n      data: t\n    };\n  });\n\n  //   const result = {};\n\n  return {\n    series: series,\n    dates: pureHours\n  };\n};\n// _________________________________________________________\n// //temp test data\n// const testDates = () => {\n// \tlet date = new Date('01-04-2022')\n// \tlet dates = []\n// \tfor (let i = 0; i < 30; i++){\n// \t\tdates.push(date.getTime())\n// \t\tdate.setDate(date.getDate() + 1)\n// \t}\n// \treturn dates\n// }\n// const testSeries = () => {\n// \treturn [\n// \t\t{\n// \t\t\tname: \"Accumulated data\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"x.vasquez\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"i.ishbaev@innopolis.university\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"i.ivanov@innopolis.university\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"a.sidorov@innopolis.university\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t}\n// \t]\n// }\n// export const TestLineData = () => {\n// \treturn {\n// \t\tseries: testSeries(),\n// \t\tdates: testDates()\n// \t}\n// }\n\n// export const TestLineApps = () => {\n\n// \tlet idel = {\n// \t\tname: 'i.ishbaev@innopolis.university',\n// \t\tdata: [\n// \t\t\t{\n// \t\t\t\tname: \"Safari\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"VsCode\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Terminal\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Chrome\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Finder\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t]\n// \t}\n// \tlet ivan = {\n// \t\tname: 'i.ivanov@innopolis.university',\n// \t\tdata: [\n// \t\t\t{\n// \t\t\t\tname: \"Safari\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"VsCode\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Terminal\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Chrome\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Finder\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t]\n// \t}\n// \tlet Accumulated = {\n// \t\tname: 'accumulated',\n// \t\tdata: [\n// \t\t\t{\n// \t\t\t\tname: \"Safari\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"VsCode\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Terminal\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Chrome\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Finder\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t]\n// \t}\n\n// \treturn {\n// \t\tseries: [Accumulated, idel, ivan],\n// \t\tdates: [12, 13, 14, 15]\n// \t}\n// }\n\n// export const TestLineApps = () => {\n//   return;\n// };\n\n// const emailN = {\n//   name: \"email\",\n//   data: [\n//     {\n//       name: \"AppName\",\n//       data: [], //length X\n//     },\n//   ],\n// };\n// const result = {\n// \tseries: [emailN, null, null],\n// \tdates: [1,2,3] //length X\n// }","map":{"version":3,"names":["LinePreprocesserTime","data","initStartDate","initEndDate","report","length","allEmails","forEach","dataObj","find","e","email","push","dataByEmail","em","name","filter","d","days","getDateWithoutTime","getTime","allMembersTime","Array","fill","allDates","map","EmailData","startDate","Date","date","DataForAllDates","k","daysIndex","setDate","getDate","activity_day","split","reverse","join","time","TimeToSeconds","time_used","unshift","series","dates","formatTime","seconds","pad","Math","floor","timestrToSec","timestr","parts","includes","isNaN","num","sortObjectByKey","obj","keys","sorted_obj","key","hasOwnProperty","sort","dateString","year","getFullYear","month","getMonth","day","newDate","t","LinePreprocesserApps","activityReports","cumulteHourly","reportList","hours","apps","r","hourCaptured","capturedDate","hourStringified","String","Number","executable_name","used_time","sortedHours","i","prevKey","res","_i","_Object$entries","Object","entries","_ref","_ref2","_slicedToArray","value","hour","parseInt","undefined","accumulated","a","pureHours","item"],"sources":["/Users/drenyasova/diplome/src/views/NewDashboard/GQM/Preprocessers/LinePreprocesser.js"],"sourcesContent":["export const LinePreprocesserTime = (data, initStartDate, initEndDate) => {\n  if (!data || !data.report || data.report.length === 0) return null;\n  let allEmails = [];\n\n  data.report.forEach((dataObj) => {\n    if (!allEmails.find((e) => e === dataObj.email))\n      allEmails.push(dataObj.email);\n  });\n\n  let dataByEmail = [];\n  allEmails.forEach((em) => {\n    dataByEmail.push({\n      name: em,\n      data: data.report.filter((d) => d.email === em),\n    });\n  });\n\n  const days =\n    (getDateWithoutTime(initEndDate).getTime() -\n      getDateWithoutTime(initStartDate).getTime()) /\n    (1000 * 3600 * 24);\n  const allMembersTime = Array(days).fill(0);\n  const allDates = [];\n\n  dataByEmail = dataByEmail.map((EmailData) => {\n    const startDate = new Date(initStartDate).getTime();\n    let date = new Date(initEndDate);\n\n    let DataForAllDates = [];\n    let k = EmailData.data.length - 1;\n    let daysIndex = days - 1;\n\n    while (startDate !== date.getTime()) {\n      if (allDates.length !== days) allDates.push(date.getTime());\n      date.setDate(date.getDate() - 1);\n\n      if (\n        k !== -1 &&\n        getDateWithoutTime(\n          EmailData.data[k].activity_day.split(\"/\").reverse().join(\"-\")\n        ).getTime() === getDateWithoutTime(date).getTime()\n      ) {\n        const time = TimeToSeconds(EmailData.data[k].time_used);\n        DataForAllDates.push(time);\n        allMembersTime[daysIndex] += time;\n        k--;\n      } else DataForAllDates.push(0);\n      daysIndex--;\n    }\n    return {\n      name: EmailData.name,\n      data: DataForAllDates.reverse(),\n    };\n  });\n\n  dataByEmail.unshift({\n    name: \"Accumulated data\",\n    data: allMembersTime,\n  });\n\n  return {\n    series: dataByEmail,\n    dates: allDates.reverse(),\n  };\n};\n\n//helper functions for line App\n\nexport function formatTime(seconds) {\n  return [\n    pad(Math.floor(seconds / 3600)),\n    pad(Math.floor(seconds / 60) % 60),\n    pad(seconds % 60),\n  ].join(\":\");\n}\n\nexport function timestrToSec(timestr) {\n  var parts = timestr.split(\":\");\n  if (parts[0].includes(\"days\")) return 0;\n  if (isNaN(parts[0]) || isNaN(parts[1]) || isNaN(parts[2])) return 0;\n  return +parts[0] * 3600 + +parts[1] * 60 + +parts[2];\n}\n\nexport function pad(num) {\n  if (num < 10) {\n    return \"0\" + num;\n  } else {\n    return \"\" + num;\n  }\n}\nvar sortObjectByKey = function (obj) {\n  var keys = [];\n  var sorted_obj = {};\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keys.push(key);\n    }\n  }\n\n  // sort keys\n  keys.sort();\n\n  // create new array based on Sorted Keys\n  keys.forEach((key) => {\n    sorted_obj[key] = obj[key];\n  });\n\n  return sorted_obj;\n};\nconst getDateWithoutTime = (dateString) => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate();\n\n  const newDate = new Date(year, month, day);\n  return newDate;\n};\n\nconst TimeToSeconds = (time) => {\n  const t = time.split(\":\");\n  return t[0] * 3600 + t[1] * 60 + t[2] * 1;\n};\n\n//main functions for line App\nexport const LinePreprocesserApps = (data) => {\n  if (!data || !data.activityReports || data.activityReports.length === 0)\n    return null;\n\n  return cumulteHourly(data.activityReports);\n};\n\nconst cumulteHourly = (reportList) => {\n  const hours = {};\n  const apps = [];\n\n  reportList.forEach((r) => {\n    const hourCaptured = r.capturedDate.split(\" \")[1].split(\":\")[0];\n    const hourStringified = String(Number(hourCaptured));\n    if (!apps.includes(r.executable_name)) apps.push(r.executable_name);\n    if (!hours[hourStringified]) hours[hourStringified] = {};\n    if (hours[hourStringified][r.executable_name]) {\n      hours[hourStringified][r.executable_name] = formatTime(\n        timestrToSec(hours[hourStringified][r.executable_name]) +\n          timestrToSec(r.used_time)\n      );\n    } else {\n      hours[hourStringified][r.executable_name] = r.used_time;\n    }\n  });\n  // Accumulate with previous values\n  const sortedHours = sortObjectByKey(hours);\n  let i = -1;\n  let prevKey = -1;\n  let res = [];\n  for (const [key, value] of Object.entries(sortedHours)) {\n    i++;\n    if (i === 0) {\n      res.push({ hour: parseInt(key), data: value });\n      prevKey = key;\n      continue;\n    }\n    if (parseInt(prevKey) === parseInt(key) - 1) {\n      res.push({ hour: parseInt(key), data: value });\n      prevKey = key;\n      continue;\n    }\n    while (parseInt(prevKey) !== parseInt(key) - 1) {\n      res.push({ hour: parseInt(prevKey) + 1, value: undefined });\n      prevKey = parseInt(prevKey) + 1 + \"\";\n    }\n    res.push({ hour: parseInt(key), data: value });\n    prevKey = key;\n  }\n  const accumulated = {};\n  apps.forEach((a) => {\n    accumulated[a] = [];\n  });\n\n  const pureHours = res.map((a) => a.hour);\n\n  let series = apps.map((a) => {\n    return { name: a, data: [] };\n  });\n  series = series.map((item) => {\n    const t = res.map((a) =>\n      a.data ? (a.data[item.name] ? TimeToSeconds(a.data[item.name]) : 0) : 0\n    );\n    return {\n      name: item.name,\n      data: t,\n    };\n  });\n\n  //   const result = {};\n\n  return {\n    series: series,\n    dates: pureHours,\n  };\n};\n// _________________________________________________________\n// //temp test data\n// const testDates = () => {\n// \tlet date = new Date('01-04-2022')\n// \tlet dates = []\n// \tfor (let i = 0; i < 30; i++){\n// \t\tdates.push(date.getTime())\n// \t\tdate.setDate(date.getDate() + 1)\n// \t}\n// \treturn dates\n// }\n// const testSeries = () => {\n// \treturn [\n// \t\t{\n// \t\t\tname: \"Accumulated data\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"x.vasquez\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"i.ishbaev@innopolis.university\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"i.ivanov@innopolis.university\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t},\n// \t\t{\n// \t\t\tname: \"a.sidorov@innopolis.university\",\n// \t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 30\n// \t\t\t\t}, () => Math.floor(Math.random() * 14400))\n// \t\t}\n// \t]\n// }\n// export const TestLineData = () => {\n// \treturn {\n// \t\tseries: testSeries(),\n// \t\tdates: testDates()\n// \t}\n// }\n\n// export const TestLineApps = () => {\n\n// \tlet idel = {\n// \t\tname: 'i.ishbaev@innopolis.university',\n// \t\tdata: [\n// \t\t\t{\n// \t\t\t\tname: \"Safari\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"VsCode\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Terminal\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Chrome\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Finder\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t]\n// \t}\n// \tlet ivan = {\n// \t\tname: 'i.ivanov@innopolis.university',\n// \t\tdata: [\n// \t\t\t{\n// \t\t\t\tname: \"Safari\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"VsCode\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Terminal\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Chrome\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Finder\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 8000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t]\n// \t}\n// \tlet Accumulated = {\n// \t\tname: 'accumulated',\n// \t\tdata: [\n// \t\t\t{\n// \t\t\t\tname: \"Safari\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"VsCode\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Terminal\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Chrome\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tname: \"Finder\",\n// \t\t\t\tdata: Array.from({\n// \t\t\t\t\tlength: 4\n// \t\t\t\t}, () => Math.floor(Math.random() * 3000)).sort((a, b) => a > b ? 1 : -1)\n// \t\t\t},\n// \t\t]\n// \t}\n\n// \treturn {\n// \t\tseries: [Accumulated, idel, ivan],\n// \t\tdates: [12, 13, 14, 15]\n// \t}\n// }\n\n// export const TestLineApps = () => {\n//   return;\n// };\n\n// const emailN = {\n//   name: \"email\",\n//   data: [\n//     {\n//       name: \"AppName\",\n//       data: [], //length X\n//     },\n//   ],\n// };\n// const result = {\n// \tseries: [emailN, null, null],\n// \tdates: [1,2,3] //length X\n// }\n"],"mappings":"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,CAAC;EACH,CAAC,CAAC;;EAEF;;EAEA,OAAO;IACL3B,MAAM,EAAEA,MAAM;IACdC,KAAK,EAAE0D;EACT,CAAC;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}