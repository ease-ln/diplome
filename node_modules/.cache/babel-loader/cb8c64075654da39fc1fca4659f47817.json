{"ast":null,"code":"import _toConsumableArray from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/drenyasova/diplome/src/views/NewDashboard/GQM/NewMetric.js\",\n  _this = this;\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, CardBody, CardHeader, Label, Alert, Spinner } from \"reactstrap\";\nimport WidgetNumber from \"./WidgetNumber/WidgetNumber.js\";\nimport UserSelect from \"../Helpers/UserSelect\";\nimport DateOptions from \"./DateOptions\";\nimport LineGraph from \"./LineGraph\";\nimport PieGraph from \"./PieGraph\";\nimport { Preprocessers } from \"./Preprocessers\";\nimport * as Components from \"./Components/DeveloperDie\";\nimport { config } from '../../../services/config';\nexport default function NewMetric(_ref) {\n  var name = _ref.name,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? \"line\" : _ref$type,\n    _ref$userSelect = _ref.userSelect,\n    userSelect = _ref$userSelect === void 0 ? null : _ref$userSelect,\n    _ref$userSelectEmails = _ref.userSelectEmails,\n    userSelectEmails = _ref$userSelectEmails === void 0 ? false : _ref$userSelectEmails,\n    _ref$startAndEndDate = _ref.startAndEndDate,\n    startAndEndDate = _ref$startAndEndDate === void 0 ? false : _ref$startAndEndDate,\n    _ref$api = _ref.api,\n    api = _ref$api === void 0 ? null : _ref$api,\n    _ref$userRole = _ref.userRole,\n    userRole = _ref$userRole === void 0 ? \"DEVELOPER\" : _ref$userRole,\n    _ref$users = _ref.users,\n    users = _ref$users === void 0 ? [] : _ref$users,\n    projectID = _ref.projectID,\n    SQProject = _ref.SQProject;\n  var dispatch = useDispatch();\n  var currentDate = new Date();\n  var _useState = useState(startAndEndDate ? new Date(currentDate.setDate(currentDate.getDate() - 30)) : new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    date = _useState2[0],\n    setDate = _useState2[1];\n  var _useState3 = useState(new Date()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    endDate = _useState4[0],\n    setEndDate = _useState4[1];\n  var _useState5 = useState(JSON.parse(localStorage.getItem(\"innometrics-email\"))),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState({\n      loading: false,\n      error: false\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    status = _useState8[0],\n    setStatus = _useState8[1]; //useState({ loading: true, error: false })\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    data = _useState10[0],\n    setData = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    options = _useState12[0],\n    setOptions = _useState12[1]; // funct for emails in userSelect\n  var fetchUsers = useCallback(function (projectId) {\n    var url = \"\".concat(config.URL, \":\").concat(config.PORT_NUMBER, \"/\").concat(config.API.AUTH_REST, \"/\").concat(config.API.USERS, \"?ProjectId=\").concat(projectId);\n    var token = localStorage.getItem('mr-token');\n    var headers = {\n      Token: token,\n      Accept: \"application/json\"\n    };\n    return fetch(url, {\n      method: \"GET\",\n      headers: headers\n    }).then(function (r) {\n      return r.json();\n    });\n  }, [projectID]);\n\n  //fetch emails for userSelect\n  useEffect(function () {\n    if (!userSelect) return;\n    fetchUsers(projectID).then(function (res) {\n      if (!res || !res.userList || res.userList === 0) return;\n      var t = res.userList.map(function (item) {\n        return item.email;\n      });\n      setOptions(t);\n    }).catch(function (er) {\n      return console.log(er);\n    });\n  }, [projectID]);\n\n  //fetch data\n  useEffect(function () {\n    setStatus({\n      loading: true,\n      error: false\n    });\n    if (!api) {\n      setStatus({\n        loading: false,\n        error: true\n      });\n      return;\n    }\n    dispatch(api(email,\n    // new Date('10-12-2021'),\n    date,\n    // new Date('10-12-2021'),\n    startAndEndDate ? endDate : date, projectID, SQProject)).then(function (res) {\n      setStatus({\n        loading: false,\n        error: false\n      });\n      var tempData = Preprocessers(type, res, userRole, email, date, endDate, name);\n      setData(tempData);\n      if (!tempData || tempData.length === 0) return;\n      if (!userSelect) return;\n      //options for data that return all emails (accum time report)\n      if (!userSelectEmails) {\n        setOptions([\"All team members\"].concat(_toConsumableArray(tempData.series.map(function (item) {\n          return item.name;\n        }))));\n        return;\n      }\n    }).catch(function (error) {\n      setStatus({\n        loading: false,\n        error: true\n      });\n    });\n  }, [email, date, endDate, projectID, SQProject]);\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    userSelectResult = _useState14[0],\n    setUserSelectResult = _useState14[1];\n  var getUserData = useCallback(function () {\n    if (!userSelect) return data;\n    if (userSelectEmails) return data;\n    //default\n    if (!userSelectResult || userSelectResult === \"\" || userSelectResult === \"All team members\") {\n      if (!startAndEndDate && data && data.series) return {\n        dates: data.dates,\n        series: data.series[0].data\n      };\n      return data;\n    }\n    //exact selected series\n    return {\n      dates: data.dates,\n      series: data.series.filter(function (item) {\n        return item.name === userSelectResult;\n      })\n    };\n  }, [data, userSelectResult]);\n  var setDateOption = function setDateOption(startDate, endDate) {\n    setDate(startDate);\n    setEndDate(endDate);\n  };\n  var userSelectOnChange = function userSelectOnChange(e) {\n    if (userSelectEmails) {\n      if (!e || e === \"\") setEmail(JSON.parse(localStorage.getItem(\"innometrics-email\")));else setEmail(e);\n    }\n    setUserSelectResult(e);\n  };\n  var isData = useMemo(function () {\n    if (userSelectEmails) return true;\n    if (!data) return false;\n    if (data.report && data.report.length === 0) return false;\n    if (data.reports && data.reports.length === 0) return false;\n    if (data.activityReports && data.activityReports.length === 0) return false;\n    return true;\n  }, [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    style: {\n      height: \"45px\",\n      padding: 0,\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      height: \"45px\",\n      backgroundColor: \"#f0f3f5\",\n      alignContent: \"center\",\n      padding: \"0 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0,\n      alignSelf: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, name), userSelect && isData && userRole !== \"developer\" && options && options.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"4px 4px 0 4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UserSelect, {\n    onChange: userSelectOnChange,\n    items: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DateOptions, {\n    setOption: setDateOption,\n    isRange: !!startAndEndDate,\n    initialDate: date,\n    endDate: endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    style: {\n      maring: 0,\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"250px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Mediator, {\n    status: status,\n    type: type,\n    data: getUserData(),\n    startAndEndDate: startAndEndDate,\n    userRole: userRole,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  })))));\n}\nvar Mediator = function Mediator(_ref2) {\n  var status = _ref2.status,\n    type = _ref2.type,\n    data = _ref2.data,\n    startAndEndDate = _ref2.startAndEndDate,\n    userRole = _ref2.userRole,\n    name = _ref2.name;\n  if (status.loading) return /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"grow\",\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 30\n    }\n  });\n  if (status.error) return /*#__PURE__*/React.createElement(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 28\n    }\n  }, \"Something went wrong.\");\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      color: \"dark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 12\n      }\n    }, \"No data. Try another date.\");\n  }\n  var getInfoBLock = function getInfoBLock() {\n    switch (name) {\n      case \"Accumulated Total Time Spent\":\n        return Components.InfoBlockForTime;\n      case \"Top 5 Apps Per Person Daily\":\n        return Components.InfoBlockForApps;\n      default:\n        return /*#__PURE__*/React.createElement(Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 16\n          }\n        }, \"Something went wrong.\");\n    }\n  };\n  switch (type) {\n    case \"line\":\n      return /*#__PURE__*/React.createElement(LineGraph, {\n        data: data,\n        XAxisType: startAndEndDate ? \"datetime\" : \"category\",\n        userRole: userRole,\n        InfoBlock: getInfoBLock(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }\n      });\n    case \"pie\":\n      return /*#__PURE__*/React.createElement(PieGraph, {\n        data: data,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 14\n        }\n      });\n    case \"number\":\n      return /*#__PURE__*/React.createElement(WidgetNumber, {\n        header: data,\n        color: \"primary\",\n        className: \"card-body-unset\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }\n      });\n    default:\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 14\n        }\n      }, \"graph\");\n  }\n};","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useDispatch","Card","CardBody","CardHeader","Label","Alert","Spinner","WidgetNumber","UserSelect","DateOptions","LineGraph","PieGraph","Preprocessers","Components","config","NewMetric","_ref","name","_ref$type","type","_ref$userSelect","userSelect","_ref$userSelectEmails","userSelectEmails","_ref$startAndEndDate","startAndEndDate","_ref$api","api","_ref$userRole","userRole","_ref$users","users","projectID","SQProject","dispatch","currentDate","Date","_useState","setDate","getDate","_useState2","_slicedToArray","date","_useState3","_useState4","endDate","setEndDate","_useState5","JSON","parse","localStorage","getItem","_useState6","email","setEmail","_useState7","loading","error","_useState8","status","setStatus","_useState9","_useState10","data","setData","_useState11","_useState12","options","setOptions","fetchUsers","projectId","url","concat","URL","PORT_NUMBER","API","AUTH_REST","USERS","token","headers","Token","Accept","fetch","method","then","r","json","res","userList","t","map","item","catch","er","console","log","tempData","length","_toConsumableArray","series","_useState13","_useState14","userSelectResult","setUserSelectResult","getUserData","dates","filter","setDateOption","startDate","userSelectOnChange","e","isData","report","reports","activityReports","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","height","padding","margin","display","justifyContent","backgroundColor","alignContent","alignSelf","onChange","items","setOption","isRange","initialDate","maring","alignItems","Mediator","_ref2","animation","variant","_this","color","getInfoBLock","InfoBlockForTime","InfoBlockForApps","XAxisType","InfoBlock","header","className"],"sources":["/Users/drenyasova/diplome/src/views/NewDashboard/GQM/NewMetric.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, CardBody, CardHeader, Label, Alert, Spinner } from \"reactstrap\";\n\nimport WidgetNumber from \"./WidgetNumber/WidgetNumber.js\";\nimport UserSelect from \"../Helpers/UserSelect\";\nimport DateOptions from \"./DateOptions\";\nimport LineGraph from \"./LineGraph\";\nimport PieGraph from \"./PieGraph\";\nimport { Preprocessers } from \"./Preprocessers\";\nimport * as Components from \"./Components/DeveloperDie\";\nimport { config } from '../../../services/config';\n\nexport default function NewMetric({\n  name,\n  type = \"line\",\n  userSelect = null,\n  userSelectEmails = false,\n  startAndEndDate = false,\n  api = null,\n  userRole = \"DEVELOPER\",\n  users = [],\n  projectID,\n  SQProject,\n}) {\n  const dispatch = useDispatch();\n\n  const currentDate = new Date();\n  const [date, setDate] = useState(\n    startAndEndDate\n      ? new Date(currentDate.setDate(currentDate.getDate() - 30))\n      : new Date()\n  );\n  const [endDate, setEndDate] = useState(new Date());\n  const [email, setEmail] = useState(\n    JSON.parse(localStorage.getItem(\"innometrics-email\"))\n  );\n  const [status, setStatus] = useState({ loading: false, error: false }); //useState({ loading: true, error: false })\n  const [data, setData] = useState();\n  const [options, setOptions] = useState([]);\n\n  // funct for emails in userSelect\n  const fetchUsers = useCallback(\n    (projectId) => {\n      const url = `${config.URL}:${config.PORT_NUMBER}/${config.API.AUTH_REST}/${config.API.USERS}?ProjectId=${projectId}`;\n      const token = localStorage.getItem('mr-token');\n      const headers = { Token: token, Accept: \"application/json\" };\n      return fetch(url, {\n        method: \"GET\",\n        headers,\n      }).then((r) => r.json());\n    },\n    [projectID]\n  );\n\n  //fetch emails for userSelect\n  useEffect(() => {\n    if (!userSelect) return;\n    fetchUsers(projectID)\n      .then((res) => {\n        if (!res || !res.userList || res.userList === 0) return;\n        const t = res.userList.map((item) => item.email);\n        setOptions(t);\n      })\n      .catch((er) => console.log(er));\n  }, [projectID]);\n\n  //fetch data\n  useEffect(() => {\n    setStatus({ loading: true, error: false });\n    if (!api) {\n      setStatus({ loading: false, error: true });\n      return;\n    }\n\n    dispatch(\n      api(\n        email,\n        // new Date('10-12-2021'),\n        date,\n        // new Date('10-12-2021'),\n        startAndEndDate ? endDate : date,\n        projectID,\n        SQProject\n      )\n    )\n      .then((res) => {\n        setStatus({ loading: false, error: false });\n\n        const tempData = Preprocessers(\n          type,\n          res,\n          userRole,\n          email,\n          date,\n          endDate,\n          name\n        );\n        setData(tempData);\n\n        if (!tempData || tempData.length === 0) return;\n        if (!userSelect) return;\n        //options for data that return all emails (accum time report)\n        if (!userSelectEmails) {\n          setOptions([\n            \"All team members\",\n            ...tempData.series.map((item) => item.name),\n          ]);\n          return;\n        }\n      })\n      .catch((error) => {\n        setStatus({ loading: false, error: true });\n      });\n  }, [email, date, endDate, projectID, SQProject]);\n\n  const [userSelectResult, setUserSelectResult] = useState(\"\");\n  const getUserData = useCallback(() => {\n    if (!userSelect) return data;\n    if (userSelectEmails) return data;\n    //default\n    if (\n      !userSelectResult ||\n      userSelectResult === \"\" ||\n      userSelectResult === \"All team members\"\n    ) {\n      if (!startAndEndDate && data && data.series)\n        return { dates: data.dates, series: data.series[0].data };\n      return data;\n    }\n    //exact selected series\n    return {\n      dates: data.dates,\n      series: data.series.filter((item) => item.name === userSelectResult),\n    };\n  }, [data, userSelectResult]);\n\n  const setDateOption = (startDate, endDate) => {\n    setDate(startDate);\n    setEndDate(endDate);\n  };\n\n  const userSelectOnChange = (e) => {\n    if (userSelectEmails) {\n      if (!e || e === \"\")\n        setEmail(JSON.parse(localStorage.getItem(\"innometrics-email\")));\n      else setEmail(e);\n    }\n    setUserSelectResult(e);\n  };\n\n  const isData = useMemo(() => {\n    if (userSelectEmails) return true;\n    if (!data) return false;\n    if (data.report && data.report.length === 0) return false;\n    if (data.reports && data.reports.length === 0) return false;\n    if (data.activityReports && data.activityReports.length === 0) return false;\n    return true;\n  }, [data]);\n\n  return (\n    <>\n      <Card>\n        <CardHeader style={{ height: \"45px\", padding: 0, margin: 0 }}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              height: \"45px\",\n              backgroundColor: \"#f0f3f5\",\n              alignContent: \"center\",\n              padding: \"0 20px\",\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                alignSelf: \"center\",\n              }}\n            >\n              {name}\n            </p>\n\n            {userSelect &&\n              isData &&\n              userRole !== \"developer\" &&\n              options &&\n              options.length > 1 && (\n                <div style={{ margin: \"4px 4px 0 4px\" }}>\n                  <UserSelect onChange={userSelectOnChange} items={options} />\n                </div>\n              )}\n\n            <DateOptions\n              setOption={setDateOption}\n              isRange={!!startAndEndDate}\n              initialDate={date}\n              endDate={endDate}\n            />\n          </div>\n        </CardHeader>\n\n        <CardBody\n          style={{\n            maring: 0,\n            padding: \"5px\",\n          }}\n        >\n          <div\n            style={{\n              height: \"250px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Mediator\n              status={status}\n              type={type}\n              data={getUserData()}\n              startAndEndDate={startAndEndDate}\n              userRole={userRole}\n              name={name}\n            />\n          </div>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nconst Mediator = ({ status, type, data, startAndEndDate, userRole, name }) => {\n  if (status.loading) return <Spinner animation=\"grow\" variant=\"primary\" />;\n  if (status.error) return <Label>Something went wrong.</Label>;\n\n  if (!data || data.length === 0) {\n    return <Alert color=\"dark\">No data. Try another date.</Alert>;\n  }\n\n  const getInfoBLock = () => {\n    switch (name) {\n      case \"Accumulated Total Time Spent\":\n        return Components.InfoBlockForTime;\n      case \"Top 5 Apps Per Person Daily\":\n        return Components.InfoBlockForApps;\n      default:\n        return <Label>Something went wrong.</Label>;\n    }\n  };\n\n  switch (type) {\n    case \"line\":\n      return (\n        <LineGraph\n          data={data}\n          XAxisType={startAndEndDate ? \"datetime\" : \"category\"}\n          userRole={userRole}\n          InfoBlock={getInfoBLock()}\n        />\n      );\n    case \"pie\":\n      return <PieGraph data={data} />;\n    case \"number\":\n      return (\n        <WidgetNumber\n          header={data}\n          color=\"primary\"\n          className=\"card-body-unset\"\n        />\n      );\n    default:\n      return <p>graph</p>;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}