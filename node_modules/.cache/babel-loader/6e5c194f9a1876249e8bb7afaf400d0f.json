{"ast":null,"code":"import _defineProperty from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/drenyasova/diplome/src/views/Users/UserTreeView.js\";\nimport React from 'react';\nimport OrgChart from '@unicef/react-org-chart';\nimport avatarPersonnel from \"./avatar-personnel.svg\";\nimport orgIcon from \"./collaboration.svg\";\nimport projectIcon from \"./projector-screen.svg\";\nfunction getRoot() {\n  return {\n    id: 100,\n    person: {\n      id: 100,\n      avatar: orgIcon,\n      department: '',\n      name: 'Innometrics',\n      title: 'Organization'\n    },\n    hasChild: true,\n    hasParent: false,\n    children: []\n  };\n}\nfunction getOrgs(projects) {\n  var orgs = [];\n  projects.forEach(function (p) {\n    orgs.push({\n      id: p.projectID,\n      person: {\n        id: p.projectID,\n        name: p.name.split('_').length > 1 ? p.name.split('_').join(' ') : p.name,\n        avatar: projectIcon,\n        department: '',\n        title: '',\n        totalReports: 0\n      },\n      hasChild: true,\n      hasParent: true\n    });\n  });\n  return orgs;\n}\nfunction getPeople(users) {\n  var ppl = [];\n  users.forEach(function (p, idx) {\n    ppl.push({\n      id: idx + 1000,\n      person: {\n        id: idx + 1000,\n        name: \"\".concat(p.name, \" \").concat(p.surname),\n        avatar: avatarPersonnel,\n        department: '',\n        title: p.role,\n        totalReports: 0\n      },\n      hasChild: true,\n      hasParent: true\n    });\n  });\n  return ppl;\n}\nvar UserTreeView = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserTreeView, _React$Component);\n  function UserTreeView(props) {\n    var _this;\n    _classCallCheck(this, UserTreeView);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserTreeView).call(this, props));\n    _this.getChild = function (id) {\n      var projectIds = _this.props.projects.map(function (p) {\n        return p.projectID;\n      });\n      if (id === 100) return getOrgs(_this.props.projects);\n      if (projectIds.includes(id)) return getPeople(_this.state.usersPerProject[id]);\n    };\n    _this.getParent = function (d) {\n      var projectIds = _this.props.projects.map(function (p) {\n        return p.projectID;\n      });\n      if (projectIds.includes(d.id)) return 100;\n    };\n    _this.handleDownload = function () {\n      _this.setState({\n        downloadingChart: false\n      });\n    };\n    _this.handleOnChangeConfig = function (config) {\n      _this.setState({\n        config: config\n      });\n    };\n    _this.handleLoadConfig = function () {\n      var config = _this.state.config;\n      return config;\n    };\n    _this.state = {\n      tree: getRoot(props.users, props.projects),\n      downloadingChart: false,\n      config: {},\n      highlightPostNumbers: [1],\n      usersPerProject: {}\n    };\n    return _this;\n  }\n  _createClass(UserTreeView, [{\n    key: \"fetchUsers\",\n    value: function fetchUsers(projectId) {\n      var url = \"https://innometric.guru:9091/V1/Admin/Users?ProjectId=\".concat(projectId);\n      var token = JSON.parse(localStorage.getItem('https://innometric.guru-innometric:9091')).token;\n      var headers = {\n        Token: token,\n        Accept: 'application/json'\n      };\n      return fetch(url, {\n        method: 'GET',\n        headers: headers\n      }).then(function (r) {\n        return r.json();\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      // eslint-disable-next-line array-callback-return\n      this.props.projects.map(function (pr) {\n        _this2.fetchUsers(pr.projectID).then(function (res) {\n          _this2.setState({\n            usersPerProject: _objectSpread({}, _this2.state.usersPerProject, _defineProperty({}, pr.projectID, res.userList))\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var tree = this.state.tree; //For downloading org chart as image or pdf based on id\n      var downloadImageId = 'download-image';\n      var downloadPdfId = 'download-pdf';\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(OrgChart, {\n        tree: tree,\n        downloadImageId: downloadImageId,\n        downloadPdfId: downloadPdfId,\n        onConfigChange: function onConfigChange(config) {\n          _this3.handleOnChangeConfig(config);\n        },\n        loadConfig: function loadConfig(d) {\n          var configuration = _this3.handleLoadConfig(d);\n          if (configuration) {\n            return configuration;\n          }\n        },\n        loadImage: function loadImage(d) {\n          if (d.id >= 1000) return Promise.resolve(avatarPersonnel);\n          if (d.id === 100) return Promise.resolve(orgIcon);else return Promise.resolve(projectIcon);\n        },\n        loadParent: function loadParent(d) {\n          var parentData = _this3.getParent(d);\n          return parentData;\n        },\n        loadChildren: function loadChildren(d) {\n          var childrenData = _this3.getChild(d.id);\n          return childrenData;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return UserTreeView;\n}(React.Component);\nexport { UserTreeView as default };","map":{"version":3,"names":["React","OrgChart","avatarPersonnel","orgIcon","projectIcon","getRoot","id","person","avatar","department","name","title","hasChild","hasParent","children","getOrgs","projects","orgs","forEach","p","push","projectID","split","length","join","totalReports","getPeople","users","ppl","idx","concat","surname","role","UserTreeView","_React$Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","getChild","projectIds","map","includes","state","usersPerProject","getParent","d","handleDownload","setState","downloadingChart","handleOnChangeConfig","config","handleLoadConfig","tree","highlightPostNumbers","_createClass","key","value","fetchUsers","projectId","url","token","JSON","parse","localStorage","getItem","headers","Token","Accept","fetch","method","then","r","json","componentDidMount","_this2","pr","res","_objectSpread","_defineProperty","userList","render","_this3","downloadImageId","downloadPdfId","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onConfigChange","loadConfig","configuration","loadImage","Promise","resolve","loadParent","parentData","loadChildren","childrenData","Component","default"],"sources":["/Users/drenyasova/diplome/src/views/Users/UserTreeView.js"],"sourcesContent":["import React from 'react'\nimport OrgChart from '@unicef/react-org-chart'\n\nimport avatarPersonnel from './avatar-personnel.svg'\nimport orgIcon from './collaboration.svg'\nimport projectIcon from './projector-screen.svg'\n\nfunction getRoot() {\n  return {\n    id: 100,\n    person: {\n      id: 100,\n      avatar: orgIcon,\n      department: '',\n      name: 'Innometrics',\n      title: 'Organization',\n    },\n    hasChild: true,\n    hasParent: false,\n    children: [],\n  }\n}\n\nfunction getOrgs(projects) {\n  let orgs = []\n  projects.forEach((p) => {\n    orgs.push({\n      id: p.projectID,\n      person: {\n        id: p.projectID,\n        name:\n          p.name.split('_').length > 1 ? p.name.split('_').join(' ') : p.name,\n        avatar: projectIcon,\n        department: '',\n        title: '',\n        totalReports: 0,\n      },\n      hasChild: true,\n      hasParent: true,\n    })\n  })\n  return orgs\n}\n\nfunction getPeople(users) {\n  let ppl = []\n  users.forEach((p, idx) => {\n    ppl.push({\n      id: idx + 1000,\n      person: {\n        id: idx + 1000,\n        name: `${p.name} ${p.surname}`,\n        avatar: avatarPersonnel,\n        department: '',\n        title: p.role,\n        totalReports: 0,\n      },\n      hasChild: true,\n      hasParent: true,\n    })\n  })\n  return ppl\n}\n\nexport default class UserTreeView extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tree: getRoot(props.users, props.projects),\n      downloadingChart: false,\n      config: {},\n      highlightPostNumbers: [1],\n      usersPerProject: {},\n    }\n  }\n\n  fetchUsers(projectId) {\n    const url = `https://innometric.guru:9091/V1/Admin/Users?ProjectId=${projectId}`\n    const token = JSON.parse(\n      localStorage.getItem('https://innometric.guru-innometric:9091'),\n    ).token\n    const headers = {Token: token, Accept: 'application/json'}\n    return fetch(url, {\n      method: 'GET',\n      headers,\n    }).then((r) => r.json())\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line array-callback-return\n    this.props.projects.map((pr) => {\n      this.fetchUsers(pr.projectID).then((res) => {\n        this.setState({\n          usersPerProject: {\n            ...this.state.usersPerProject,\n            [pr.projectID]: res.userList,\n          },\n        })\n      })\n    })\n  }\n\n  getChild = (id) => {\n    const projectIds = this.props.projects.map((p) => p.projectID)\n\n    if (id === 100) return getOrgs(this.props.projects)\n    if (projectIds.includes(id))\n      return getPeople(this.state.usersPerProject[id])\n  }\n\n  getParent = (d) => {\n    const projectIds = this.props.projects.map((p) => p.projectID)\n    if (projectIds.includes(d.id)) return 100\n  }\n\n  handleDownload = () => {\n    this.setState({downloadingChart: false})\n  }\n\n  handleOnChangeConfig = (config) => {\n    this.setState({config: config})\n  }\n\n  handleLoadConfig = () => {\n    const {config} = this.state\n    return config\n  }\n\n  render() {\n    const {tree} = this.state\n\n    //For downloading org chart as image or pdf based on id\n    const downloadImageId = 'download-image'\n    const downloadPdfId = 'download-pdf'\n\n    return (\n      <React.Fragment>\n        <OrgChart\n          tree={tree}\n          downloadImageId={downloadImageId}\n          downloadPdfId={downloadPdfId}\n          onConfigChange={(config) => {\n            this.handleOnChangeConfig(config)\n          }}\n          loadConfig={(d) => {\n            let configuration = this.handleLoadConfig(d)\n            if (configuration) {\n              return configuration\n            }\n          }}\n          loadImage={(d) => {\n            if (d.id >= 1000) return Promise.resolve(avatarPersonnel)\n            if (d.id === 100) return Promise.resolve(orgIcon)\n            else return Promise.resolve(projectIcon)\n          }}\n          loadParent={(d) => {\n            const parentData = this.getParent(d)\n            return parentData\n          }}\n          loadChildren={(d) => {\n            const childrenData = this.getChild(d.id)\n            return childrenData\n          }}\n        />\n      </React.Fragment>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}