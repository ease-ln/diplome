{"ast":null,"code":"import _slicedToArray from \"/Users/drenyasova/diplome/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/drenyasova/diplome/src/views/NewDashboard/GQM/LineGraph/index.js\";\nimport React, { memo, useState, useRef, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { GetChartConfig } from \"./ChartConfig\";\n\n// import cn from \"./LineGraph.module.scss\";\n\nvar LineGraph = function LineGraph(_ref) {\n  var data = _ref.data,\n    userRole = _ref.userRole,\n    XAxisType = _ref.XAxisType,\n    InfoBlock = _ref.InfoBlock;\n  var ref = useRef();\n  var _useState = useState(JSON.parse(localStorage.getItem(\"innometrics-email\"))),\n    _useState2 = _slicedToArray(_useState, 1),\n    email = _useState2[0];\n  var isDev = userRole === \"developer\";\n  var chartConfig = GetChartConfig(data, userRole, email, XAxisType);\n  useEffect(function () {\n    ref.current.addEventListener(\"mousedown\", function (e) {\n      return e.stopPropagation();\n    });\n    return function () {\n      ref.current.removeEventListener(\"mousedown\", function (e) {\n        return e.stopPropagation();\n      });\n    };\n  }, []);\n\n  //   const getCurrentDate = () => {\n  //     return (\n  //       new Date().getDate() +\n  //       \" \" +\n  //       new Date().toLocaleString(\"en-US\", { month: \"long\" })\n  //     );\n  //   };\n  //   const getTimeForToday = () => {\n  //     const t = chartConfig.series[0].data[chartConfig.series[0].data.length - 1];\n\n  //     let tempDate = new Date(0);\n  //     tempDate.setSeconds(t);\n  //     let timeString = tempDate.toISOString().substr(11, 8);\n  //     const hours = timeString.substr(0, 2);\n  //     const mins = timeString.substr(3, 2);\n\n  //     return { hours: hours, minutes: mins };\n  //   };\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    width = _useState4[0],\n    setWidth = _useState4[1];\n  useEffect(function () {\n    // console.log(\"width\", ref.current.offsetWidth);\n    setWidth(ref.current.offsetWidth);\n    if (false) console.log(width);\n  }, [ref]);\n\n  // const getWidth = () => {\n  // \tif (XAxisType !== 'datetime')\n  // \t\treturn '100%'\n  // \treturn isDev ? '59%' : '100%'\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      width: \"\".concat(isDev ? \"59%\" : \"100%\")\n    },\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: chartConfig.options,\n    series: chartConfig.series,\n    type: XAxisType === \"datetime\" ? \"area\" : \"line\",\n    height: \"240px\"\n    // width={width+'px'}\n    // style={{width: 'inherit'}}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), isDev && InfoBlock && /*#__PURE__*/React.createElement(InfoBlock, {\n    data: chartConfig.series,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 30\n    }\n  }));\n};\nexport default memo(LineGraph);","map":{"version":3,"names":["React","memo","useState","useRef","useEffect","Chart","GetChartConfig","LineGraph","_ref","data","userRole","XAxisType","InfoBlock","ref","_useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","email","isDev","chartConfig","current","addEventListener","e","stopPropagation","removeEventListener","_useState3","_useState4","width","setWidth","offsetWidth","console","log","createElement","Fragment","style","display","concat","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","options","series","type","height"],"sources":["/Users/drenyasova/diplome/src/views/NewDashboard/GQM/LineGraph/index.js"],"sourcesContent":["import React, { memo, useState, useRef, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nimport { GetChartConfig } from \"./ChartConfig\";\n\n// import cn from \"./LineGraph.module.scss\";\n\nconst LineGraph = ({ data, userRole, XAxisType, InfoBlock }) => {\n  const ref = useRef();\n  const [email] = useState(\n    JSON.parse(localStorage.getItem(\"innometrics-email\"))\n  );\n  const isDev = userRole === \"developer\";\n\n  const chartConfig = GetChartConfig(data, userRole, email, XAxisType);\n\n  useEffect(() => {\n    ref.current.addEventListener(\"mousedown\", (e) => e.stopPropagation());\n    return () => {\n      ref.current.removeEventListener(\"mousedown\", (e) => e.stopPropagation());\n    };\n  }, []);\n\n  //   const getCurrentDate = () => {\n  //     return (\n  //       new Date().getDate() +\n  //       \" \" +\n  //       new Date().toLocaleString(\"en-US\", { month: \"long\" })\n  //     );\n  //   };\n  //   const getTimeForToday = () => {\n  //     const t = chartConfig.series[0].data[chartConfig.series[0].data.length - 1];\n\n  //     let tempDate = new Date(0);\n  //     tempDate.setSeconds(t);\n  //     let timeString = tempDate.toISOString().substr(11, 8);\n  //     const hours = timeString.substr(0, 2);\n  //     const mins = timeString.substr(3, 2);\n\n  //     return { hours: hours, minutes: mins };\n  //   };\n\n  const [width, setWidth] = useState();\n  useEffect(() => {\n    // console.log(\"width\", ref.current.offsetWidth);\n    setWidth(ref.current.offsetWidth);\n    if (false) console.log(width);\n  }, [ref]);\n\n  // const getWidth = () => {\n  // \tif (XAxisType !== 'datetime')\n  // \t\treturn '100%'\n  // \treturn isDev ? '59%' : '100%'\n  // }\n\n  return (\n    <>\n      <div\n        style={{ display: \"block\", width: `${isDev ? \"59%\" : \"100%\"}` }}\n        ref={ref}\n      >\n        <Chart\n          options={chartConfig.options}\n          series={chartConfig.series}\n          type={XAxisType === \"datetime\" ? \"area\" : \"line\"}\n          height=\"240px\"\n          // width={width+'px'}\n          // style={{width: 'inherit'}}\n        />\n      </div>\n      {isDev && InfoBlock && <InfoBlock data={chartConfig.series} />}\n    </>\n  );\n};\nexport default memo(LineGraph);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}